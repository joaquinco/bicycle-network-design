# Data took from transpurbanpasaj course in 2019.

data;

/* Node set */
set N := 
  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15;

/* Origin destinations */
# set OD := N cross N;

/* Graph adjacency matrix 1 is adjacent */
param G :=
  [1, *]  1  0  2  1  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  0
  [2, *]  1  1  2  0  3  1  4  1  5  1  6  0  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  0
  [3, *]  1  0  2  1  3  0  4  0  5  0  6  1  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  0
  [4, *]  1  0  2  1  3  0  4  0  5  1  6  1  7  0  8  0  9  0  10  0  11  0  12  1  13  0  14  0  15  0
  [5, *]  1  0  2  1  3  0  4  1  5  0  6  0  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  0
  [6, *]  1  0  2  0  3  1  4  1  5  0  6  0  7  0  8  1  9  0  10  0  11  0  12  0  13  0  14  0  15  1
  [7, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  1  11  0  12  0  13  0  14  0  15  1
  [8, *]  1  0  2  0  3  0  4  0  5  0  6  1  7  0  8  0  9  0  10  1  11  0  12  0  13  0  14  0  15  1
  [9, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  1
  [10, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  1  8  1  9  0  10  0  11  1  12  0  13  1  14  1  15  0
  [11, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  1  11  0  12  1  13  1  14  0  15  0
  [12, *]  1  0  2  0  3  0  4  1  5  0  6  0  7  0  8  0  9  0  10  0  11  1  12  0  13  0  14  0  15  0
  [13, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  1  11  1  12  0  13  0  14  1  15  0
  [14, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  1  11  0  12  0  13  1  14  0  15  0
  [15, *]  1  0  2  0  3  0  4  0  5  0  6  1  7  1  8  1  9  1  10  0  11  0  12  0  13  0  14  0  15  0;

param C := 
  [1, *]  1  0  2  8  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  0
  [2, *]  1  8  2  0  3  2  4  3  5  6  6  0  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  0
  [3, *]  1  0  2  2  3  0  4  0  5  0  6  3  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  0
  [4, *]  1  0  2  3  3  0  4  0  5  4  6  4  7  0  8  0  9  0  10  0  11  0  12  10  13  0  14  0  15  0
  [5, *]  1  0  2  6  3  0  4  4  5  0  6  0  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  0
  [6, *]  1  0  2  0  3  3  4  4  5  0  6  0  7  0  8  2  9  0  10  0  11  0  12  0  13  0  14  0  15  3
  [7, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  7  11  0  12  0  13  0  14  0  15  2
  [8, *]  1  0  2  0  3  0  4  0  5  0  6  2  7  0  8  0  9  0  10  8  11  0  12  0  13  0  14  0  15  2
  [9, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  8
  [10, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  7  8  8  9  0  10  0  11  5  12  0  13  10  14  8  15  0
  [11, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  5  11  0  12  10  13  5  14  0  15  0
  [12, *]  1  0  2  0  3  0  4  10  5  0  6  0  7  0  8  0  9  0  10  0  11  10  12  0  13  0  14  0  15  0
  [13, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  10  11  5  12  0  13  0  14  2  15  0
  [14, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  8  11  0  12  0  13  2  14  0  15  0
  [15, *]  1  0  2  0  3  0  4  0  5  0  6  3  7  2  8  2  9  8  10  0  11  0  12  0  13  0  14  0  15  0;

param DEMAND :=
  [1, *]  1  0  2  400  3  200  4  60  5  80  6  150  7  75  8  75  9  30  10  160  11  30  12  25  13  35  14  0  15  0
  [2, *]  1  400  2  0  3  50  4  120  5  20  6  180  7  90  8  90  9  15  10  130  11  20  12  10  13  10  14  5  15  0
  [3, *]  1  200  2  50  3  0  4  40  5  60  6  180  7  90  8  90  9  15  10  45  11  20  12  10  13  10  14  5  15  0
  [4, *]  1  60  2  120  3  40  4  0  5  50  6  100  7  50  8  50  9  15  10  240  11  40  12  25  13  10  14  5  15  0
  [5, *]  1  80  2  20  3  60  4  50  5  0  6  50  7  25  8  25  9  10  10  120  11  20  12  15  13  5  14  0  15  0
  [6, *]  1  150  2  180  3  180  4  100  5  50  6  0  7  100  8  100  9  30  10  880  11  60  12  15  13  15  14  10  15  0
  [7, *]  1  75  2  90  3  90  4  50  5  25  6  100  7  0  8  50  9  15  10  440  11  35  12  10  13  10  14  5  15  0
  [8, *]  1  75  2  90  3  90  4  50  5  25  6  100  7  50  8  0  9  15  10  440  11  35  12  10  13  10  14  5  15  0
  [9, *]  1  30  2  15  3  15  4  15  5  10  6  30  7  15  8  15  9  0  10  140  11  20  12  5  13  0  14  0  15  0
  [10, *]  1  160  2  130  3  45  4  240  5  120  6  880  7  440  8  440  9  140  10  0  11  600  12  250  13  500  14  200  15  0
  [11, *]  1  30  2  20  3  20  4  40  5  20  6  60  7  35  8  35  9  20  10  600  11  0  12  75  13  95  14  15  15  0
  [12, *]  1  25  2  10  3  10  4  25  5  15  6  15  7  10  8  10  9  5  10  250  11  75  12  0  13  70  14  0  15  0
  [13, *]  1  35  2  10  3  10  4  10  5  5  6  15  7  10  8  10  9  0  10  500  11  95  12  70  13  0  14  45  15  0
  [14, *]  1  0  2  5  3  5  4  5  5  0  6  10  7  5  8  5  9  0  10  200  11  15  12  0  13  45  14  0  15  0
  [15, *]  1  0  2  0  3  0  4  0  5  0  6  0  7  0  8  0  9  0  10  0  11  0  12  0  13  0  14  0  15  0;

